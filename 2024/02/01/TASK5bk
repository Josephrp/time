

Going to execute:
simple refine (p _ _ _ _) ||
  simple refine (p _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                     refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0 : C
The term "impred ?n ?P" has type
 "(∏ t1 : C, isofhlevel ?n (?P t1)) → isofhlevel ?n (∏ t1 : C, ?P t1)"
while it is expected to have type
 "isofhlevel 1
    (∏ (z : C) (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, z ⟧)
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 z h₁ h₂
     → E (h t t0 f g) z (CoequalizerOut (h t t0 f g) z h₁ p₁)
         (CoequalizerOut (h t t0 f g) z h₂ p₂))".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0 : C
The term "impred ?n ?P" has type
 "(∏ t1 : C, isofhlevel ?n (?P t1)) → isofhlevel ?n (∏ t1 : C, ?P t1)"
while it is expected to have type
 "isofhlevel 1
    (∏ (z : C) (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, z ⟧)
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 z h₁ h₂
     → E (h t t0 f g) z (CoequalizerOut (h t t0 f g) z h₁ p₁)
         (CoequalizerOut (h t t0 f g) z h₂ p₂))".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t0 : C,
        ∏ (z : C) (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, z ⟧)
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 z h₁ h₂
        → E (h t t0 f g) z (CoequalizerOut (h t t0 f g) z h₁ p₁)
            (CoequalizerOut (h t t0 f g) z h₂ p₂)) t0))


Going to execute:
simple refine (p _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t0 : C,
        ∏ (z : C) (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, z ⟧)
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 z h₁ h₂
        → E (h t t0 f g) z (CoequalizerOut (h t t0 f g) z h₁ p₁)
            (CoequalizerOut (h t t0 f g) z h₂ p₂)) t0))


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (∏ t1 : C,
    isofhlevel 1
      ((λ t2 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t2 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t2 h₁ h₂
        → E (h t t0 f g) t2 (CoequalizerOut (h t t0 f g) t2 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t2 h₂ p₂)) t1))


Going to execute:
intro

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (∏ t1 : C,
    isofhlevel 1
      ((λ t2 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t2 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t2 h₁ h₂
        → E (h t t0 f g) t2 (CoequalizerOut (h t t0 f g) t2 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t2 h₂ p₂)) t1))


Going to execute:
<coq-core.plugins.ltac::intro@0>

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
use impred; intro

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
use impred

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple_rapply p

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
fun p =>
  simple refine p ||
    simple refine (p _) ||
      simple refine (p _ _) ||
...                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _)
                               || simple refine
                               (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)

TcDebug (1) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine p ||
  simple refine (p _) ||
    simple refine (p _ _) ||
      simple refine (p _ _ _) ||
        simple refine (p _ _ _ _) ||
          simple refine (p _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)

TcDebug (1) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine p
Level 1: evaluation returns
simple refine p ||
  simple refine (p _) ||
    simple refine (p _ _) ||
      simple refine (p _ _ _) ||
        simple refine (p _ _ _ _) ||
          simple refine (p _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
where
p := impred
of type
uconstr of type tacvalue


TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _) ||
  simple refine (p _ _) ||
    simple refine (p _ _ _) ||
      simple refine (p _ _ _ _) ||
        simple refine (p _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "impred" has type
 "∏ (n : nat) (T : UU) (P : T → UU),
  (∏ t : T, isofhlevel n (P t)) → isofhlevel n (∏ t : T, P t)"
while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))"
(cannot unify "∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧)
               (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
               E t0 t1 h₁ h₂
               → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
                   (CoequalizerOut (h t t0 f g) t1 h₂ p₂)" and 
"nat").
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "impred" has type
 "∏ (n : nat) (T : UU) (P : T → UU),
  (∏ t : T, isofhlevel n (P t)) → isofhlevel n (∏ t : T, P t)"
while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))"
(cannot unify "∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧)
               (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
               E t0 t1 h₁ h₂
               → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
                   (CoequalizerOut (h t t0 f g) t1 h₂ p₂)" and 
"nat").

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _ _) ||
  simple refine (p _ _ _) ||
    simple refine (p _ _ _ _) ||
      simple refine (p _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "@impred ?n" has type
 "∏ (T : UU) (P : T → UU),
  (∏ t2 : T, isofhlevel ?n (P t2)) → isofhlevel ?n (∏ t : T, P t)"
while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))"
(cannot unify "∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧)
               (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
               E t0 t1 h₁ h₂
               → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
                   (CoequalizerOut (h t t0 f g) t1 h₂ p₂)" and 
"UU").
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "@impred ?n" has type
 "∏ (T : UU) (P : T → UU),
  (∏ t2 : T, isofhlevel ?n (P t2)) → isofhlevel ?n (∏ t : T, P t)"
while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))"
(cannot unify "∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧)
               (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
               E t0 t1 h₁ h₂
               → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
                   (CoequalizerOut (h t t0 f g) t1 h₂ p₂)" and 
"UU").

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _ _ _) ||
  simple refine (p _ _ _ _) ||
    simple refine (p _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                       refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "impred ?n" has type
 "∏ P : C ⟦ t, t0 ⟧ → UU,
  (∏ t2 : C ⟦ t, t0 ⟧, isofhlevel ?n (P t2))
  → isofhlevel ?n (∏ t : C ⟦ t, t0 ⟧, P t)" while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))"
(cannot unify "∏ (g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧)
               (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
               E t0 t1 h₁ h₂
               → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
                   (CoequalizerOut (h t t0 f g) t1 h₂ p₂)" and 
"UU").
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "impred ?n" has type
 "∏ P : C ⟦ t, t0 ⟧ → UU,
  (∏ t2 : C ⟦ t, t0 ⟧, isofhlevel ?n (P t2))
  → isofhlevel ?n (∏ t : C ⟦ t, t0 ⟧, P t)" while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))"
(cannot unify "∏ (g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧)
               (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
               E t0 t1 h₁ h₂
               → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
                   (CoequalizerOut (h t t0 f g) t1 h₂ p₂)" and 
"UU").

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _ _ _ _) ||
  simple refine (p _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                     refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "impred ?n ?P" has type
 "(∏ t2 : C ⟦ t, t0 ⟧, isofhlevel ?n (?P t2))
  → isofhlevel ?n (∏ t2 : C ⟦ t, t0 ⟧, ?P t2)"
while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
HC : is_univalent C
h : (∏ (y z : C) (f g : C ⟦ y, z ⟧), Coequalizer f g),,
    impred 1 (λ t : C, ∏ (z : C) (f g : C ⟦ t, z ⟧), Coequalizer f g)
      (λ t : C,
       impred 1 (λ t0 : C, ∏ f g : C ⟦ t, t0 ⟧, Coequalizer f g)
         (λ t0 : C,
          impred 1 (λ t1 : C ⟦ t, t0 ⟧, ∏ g : C ⟦ t, t0 ⟧, Coequalizer t1 g)
            (λ t1 : C ⟦ t, t0 ⟧,
             impred 1 (Coequalizer t1)
               (λ t2 : C ⟦ t, t0 ⟧, isaprop_Coequalizer HC t1 t2))))
t, t0, t1 : C
The term "impred ?n ?P" has type
 "(∏ t2 : C ⟦ t, t0 ⟧, isofhlevel ?n (?P t2))
  → isofhlevel ?n (∏ t2 : C ⟦ t, t0 ⟧, ?P t2)"
while it is expected to have type
 "isofhlevel 1
    (∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
     (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
     E t0 t1 h₁ h₂
     → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
         (CoequalizerOut (h t t0 f g) t1 h₂ p₂))".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
   (isofhlevel 1
      ((λ t1 : C,
        ∏ (f g : C ⟦ t, t0 ⟧) (h₁ h₂ : C ⟦ t0, t1 ⟧) 
        (p₁ : f · h₁ = g · h₁) (p₂ : f · h₂ = g · h₂),
        E t0 t1 h₁ h₂
        → E (h t t0 f g) t1 (CoequalizerOut (h t t0 f g) t1 h₁ p₁)
            (CoequalizerOut (h t t0 f g) t1 h₂ p₂)) t1))


Going to execute:
simple refine (p _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  HC : is_univalent C
  h : hProptoType
        (?X293@{__:=?M0; __:=?M0; __:=?M0; __:=?M0},,
         ?X295@{__:=?M0; __:=?M0; __:=?M0; __:=?M0})
  t : ?X628@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t0 : ?X660@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  t1 : ?X692@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  ============================
