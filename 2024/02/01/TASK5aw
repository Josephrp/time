          simple refine (p _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E" has type
 "∏ (x0 y0 : C) (a : enriched_binary_coprod_cocone ?E x0 y0)
  (sum : ∏ (w : C) (v : ?V),
         ?V ⟦ v, ?E ⦃ x0, w ⦄ ⟧
         → ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
  (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ x0, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E x0 y0 a) = f)
  → (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ x0, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E x0 y0 a) =
     g)
    → (∏ (w : C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E x0 y0 a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E x0 y0 a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E x0 y0 a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E x0 y0 a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E x0 y0 a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone"
(cannot unify "ob poset_sym_mon_closed_cat" and "ob C").
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E" has type
 "∏ (x0 y0 : C) (a : enriched_binary_coprod_cocone ?E x0 y0)
  (sum : ∏ (w : C) (v : ?V),
         ?V ⟦ v, ?E ⦃ x0, w ⦄ ⟧
         → ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
  (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ x0, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E x0 y0 a) = f)
  → (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ x0, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E x0 y0 a) =
     g)
    → (∏ (w : C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E x0 y0 a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E x0 y0 a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E x0 y0 a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E x0 y0 a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E x0 y0 a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone"
(cannot unify "ob poset_sym_mon_closed_cat" and "ob C").

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _) ||
  simple refine (p _ _ _ _) ||
    simple refine (p _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                       refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x" has type
 "∏ (y0 : C) (a : enriched_binary_coprod_cocone ?E ?x y0)
  (sum : ∏ (w : C) (v : ?V),
         ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧
         → ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
  (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x y0 a) = f)
  → (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x y0 a) =
     g)
    → (∏ (w : C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x y0 a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x y0 a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x y0 a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x y0 a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x y0 a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone"
(cannot unify "ob Core.hset_category" and "ob C").
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x" has type
 "∏ (y0 : C) (a : enriched_binary_coprod_cocone ?E ?x y0)
  (sum : ∏ (w : C) (v : ?V),
         ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧
         → ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
  (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x y0 a) = f)
  → (∏ (w : C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ y0, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x y0 a) =
     g)
    → (∏ (w : C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x y0 a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x y0 a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x y0 a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x y0 a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x y0 a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone"
(cannot unify "ob Core.hset_category" and "ob C").

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _) ||
  simple refine (p _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                     refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y" has type
 "∏ (a : enriched_binary_coprod_cocone ?E ?x ?y)
  (sum : ∏ (w : ?C) (v : ?V),
         ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧
         → ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
  (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y a) = f)
  → (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y a) =
     g)
    → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y" has type
 "∏ (a : enriched_binary_coprod_cocone ?E ?x ?y)
  (sum : ∏ (w : ?C) (v : ?V),
         ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧
         → ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
  (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y a) = f)
  → (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y a) =
     g)
    → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                   refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a" has type
 "∏
  sum : ∏ (w : ?C) (v : ?V),
        ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧
        → ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧,
  (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
   f)
  → (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
     g)
    → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a" has type
 "∏
  sum : ∏ (w : ?C) (v : ?V),
        ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧
        → ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧ → ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧,
  (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
   f)
  → (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
     sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
     g)
    → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                 refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a ?sum" has type
 "(∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   ?sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
   f)
  → (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
     ?sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
     g)
    → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a ?sum" has type
 "(∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   ?sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
   f)
  → (∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
     (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
     ?sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
     g)
    → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
       φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
       → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
         φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a)
         → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple refine
               (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a ?sum ?sum_in1" has type
 "(∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   ?sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
   g)
  → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
     φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
     φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
     → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a)
       → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a ?sum ?sum_in1" has type
 "(∏ (w : ?C) (v : ?V) (f : ?V ⟦ v, ?E ⦃ ?x, w ⦄ ⟧)
   (g : ?V ⟦ v, ?E ⦃ ?y, w ⦄ ⟧),
   ?sum w v f g · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
   g)
  → (∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
     φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
     φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
     → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
       φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a)
       → φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple refine
             (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a ?sum ?sum_in1 ?sum_in2"
has type
 "(∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
   φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
   φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
   → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
     φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) → 
     φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
EBC : poset_enrichment_binary_coprod
x, y : C
The term "make_is_binary_coprod_enriched ?E ?x ?y ?a ?sum ?sum_in1 ?sum_in2"
has type
 "(∏ (w : ?C) (v : ?V) (φ₁ φ₂ : ?V ⟦ v, ?E ⦃ ?a, w ⦄ ⟧),
   φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a) =
   φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in1 ?E ?x ?y ?a)
   → φ₁ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) =
     φ₂ · precomp_arr ?E w (enriched_coprod_cocone_in2 ?E ?x ?y ?a) → 
     φ₁ = φ₂) → is_binary_coprod_enriched ?E ?x ?y ?a"
while it is expected to have type
 "is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (is_binary_coprod_enriched E' x y make_poset_enriched_binary_coprod_cocone)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  z : ob ?X317@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  P : ob ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  f : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X321@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  g : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X323@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  ============================
   (poset_sym_mon_closed_cat ⟦ P,
    E' ⦃ make_poset_enriched_binary_coprod_cocone, z ⦄ ⟧)


Going to execute:
<coq-core.plugins.ltac::refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  z : ob ?X317@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  P : ob ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  f : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X321@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  g : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X323@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  ============================
   (poset_sym_mon_closed_cat ⟦ P, (E' ⦃ x, z ⦄) ⊗ (E' ⦃ y, z ⦄) ⟧)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  z : ob ?X317@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  P : ob ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  f : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X321@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  g : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X323@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  ============================
   (Core.hset_category ⟦ pr1 P, pr1 ((E' ⦃ x, z ⦄) ⊗ (E' ⦃ y, z ⦄)) ⟧)


Going to execute:
<coq-core.plugins.ltac::exact@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  z : ob ?X317@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  P : ob ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  f : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X321@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  g : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X323@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  ============================
   (is_monotone (pr2 P) (pr2 (E' ⦃ x, z ⦄)) (pr1 f))


Going to execute:
<coq-core.plugins.ltac::exact@0> $1
Evaluated term: prodtofun_is_monotone

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  z : ob ?X317@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  P : ob ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
  f : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X321@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  g : ?X316@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0} ⟦ P,
      ?X319@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}
      ⦃ ?X323@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=?M0}, z ⦄ ⟧
  ============================
   (is_monotone (pr2 P) (pr2 (E' ⦃ y, z ⦄)) (pr1 g))


Going to execute:
<coq-core.plugins.ltac::exact@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (f : poset_sym_mon_closed_cat ⟦ v, E' ⦃ x, w ⦄ ⟧)
    (g : poset_sym_mon_closed_cat ⟦ v, E' ⦃ y, w ⦄ ⟧),
    (λ (z : C) (P : poset_sym_mon_closed_cat)
     (f0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ x, z ⦄ ⟧)
     (g0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ y, z ⦄ ⟧),
     (prodtofuntoprod (pr1 f0,, pr1 g0),,
      prodtofun_is_monotone (pr2 f0) (pr2 g0))
     · poset_enrichment_binary_coprod_pair EBC x y z) w v f g
    · precomp_arr E' w
        (enriched_coprod_cocone_in1 E' x y
           make_poset_enriched_binary_coprod_cocone) = f)


Going to execute:
intros z P f g; use eq_monotone_function; intros w; cbn;
 apply poset_enrichment_obj_in1_sum

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (f : poset_sym_mon_closed_cat ⟦ v, E' ⦃ x, w ⦄ ⟧)
    (g : poset_sym_mon_closed_cat ⟦ v, E' ⦃ y, w ⦄ ⟧),
    (λ (z : C) (P : poset_sym_mon_closed_cat)
     (f0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ x, z ⦄ ⟧)
     (g0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ y, z ⦄ ⟧),
     (prodtofuntoprod (pr1 f0,, pr1 g0),,
      prodtofun_is_monotone (pr2 f0) (pr2 g0))
     · poset_enrichment_binary_coprod_pair EBC x y z) w v f g
    · precomp_arr E' w
        (enriched_coprod_cocone_in1 E' x y
           make_poset_enriched_binary_coprod_cocone) = f)


Going to execute:
intros z P f g; use eq_monotone_function; intros w; cbn

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (f : poset_sym_mon_closed_cat ⟦ v, E' ⦃ x, w ⦄ ⟧)
    (g : poset_sym_mon_closed_cat ⟦ v, E' ⦃ y, w ⦄ ⟧),
    (λ (z : C) (P : poset_sym_mon_closed_cat)
     (f0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ x, z ⦄ ⟧)
     (g0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ y, z ⦄ ⟧),
     (prodtofuntoprod (pr1 f0,, pr1 g0),,
      prodtofun_is_monotone (pr2 f0) (pr2 g0))
     · poset_enrichment_binary_coprod_pair EBC x y z) w v f g
    · precomp_arr E' w
        (enriched_coprod_cocone_in1 E' x y
           make_poset_enriched_binary_coprod_cocone) = f)


Going to execute:
intros z P f g; use eq_monotone_function; intros w

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (f : poset_sym_mon_closed_cat ⟦ v, E' ⦃ x, w ⦄ ⟧)
    (g : poset_sym_mon_closed_cat ⟦ v, E' ⦃ y, w ⦄ ⟧),
    (λ (z : C) (P : poset_sym_mon_closed_cat)
     (f0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ x, z ⦄ ⟧)
     (g0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ y, z ⦄ ⟧),
     (prodtofuntoprod (pr1 f0,, pr1 g0),,
      prodtofun_is_monotone (pr2 f0) (pr2 g0))
     · poset_enrichment_binary_coprod_pair EBC x y z) w v f g
    · precomp_arr E' w
        (enriched_coprod_cocone_in1 E' x y
           make_poset_enriched_binary_coprod_cocone) = f)


Going to execute:
intros z P f g; use eq_monotone_function

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  EBC : poset_enrichment_binary_coprod
  x : ob C
  y : ob C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (f : poset_sym_mon_closed_cat ⟦ v, E' ⦃ x, w ⦄ ⟧)
    (g : poset_sym_mon_closed_cat ⟦ v, E' ⦃ y, w ⦄ ⟧),
    (λ (z : C) (P : poset_sym_mon_closed_cat)
     (f0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ x, z ⦄ ⟧)
     (g0 : poset_sym_mon_closed_cat ⟦ P, E' ⦃ y, z ⦄ ⟧),
     (prodtofuntoprod (pr1 f0,, pr1 g0),,
      prodtofun_is_monotone (pr2 f0) (pr2 g0))
     · poset_enrichment_binary_coprod_pair EBC x y z) w v f g
    · precomp_arr E' w
        (enriched_coprod_cocone_in1 E' x y
           make_poset_enriched_binary_coprod_cocone) = f)
