TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
  g : J
  ============================
   ((λ (z : C) (P : poset_sym_mon_closed_cat)
     (fs : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧),
     ((λ (x : pr1 P) (j : J), pr1 (fs j) x),,
      poset_enrichment_coprod_is_coprod_subproof z P fs)
     · poset_enrichment_coprod_pair EC z ys) z P f
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g) =
    f g)


Going to execute:
simple refine (p _ _ _) ||
  simple refine (p _ _ _ _) ||
    simple refine (p _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                       refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
g : J
The term "eq_monotone_function ?f ?g" has type
 "(∏ x : ?X₁, ?f x = ?g x) → ?f = ?g" while it is expected to have type
 "((λ (x : pr1 P) (j : J), pr1 (f j) x),,
   poset_enrichment_coprod_is_coprod_subproof z P f)
  · poset_enrichment_coprod_pair EC z ys
  · precomp_arr E' z
      (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g) =
  f g".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
g : J
The term "eq_monotone_function ?f ?g" has type
 "(∏ x : ?X₁, ?f x = ?g x) → ?f = ?g" while it is expected to have type
 "((λ (x : pr1 P) (j : J), pr1 (f j) x),,
   poset_enrichment_coprod_is_coprod_subproof z P f)
  · poset_enrichment_coprod_pair EC z ys
  · precomp_arr E' z
      (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g) =
  f g".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
  g : J
  ============================
   ((λ (z : C) (P : poset_sym_mon_closed_cat)
     (fs : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧),
     ((λ (x : pr1 P) (j : J), pr1 (fs j) x),,
      poset_enrichment_coprod_is_coprod_subproof z P fs)
     · poset_enrichment_coprod_pair EC z ys) z P f
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g) =
    f g)


Going to execute:
simple refine (p _ _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
  g : J
  ============================
   ((λ (z : C) (P : poset_sym_mon_closed_cat)
     (fs : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧),
     ((λ (x : pr1 P) (j : J), pr1 (fs j) x),,
      poset_enrichment_coprod_is_coprod_subproof z P fs)
     · poset_enrichment_coprod_pair EC z ys) z P f
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g) =
    f g)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
  g : J
  ============================
   (∏ x : pr1 P,
    ((λ (z : C) (P : poset_sym_mon_closed_cat)
      (fs : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧),
      ((λ (x0 : pr1 P) (j : J), pr1 (fs j) x0),,
       poset_enrichment_coprod_is_coprod_subproof z P fs)
      · poset_enrichment_coprod_pair EC z ys) z P f
     · precomp_arr E' z
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g))
      x = f g x)


Going to execute:
intros w

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
  g : J
  w : pr1hSet
        ?X560@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=
               ?M0; __:=?M0; __:=?M0; __:=?M0; __:=
               ?M0; __:=?M0}
  ============================
   (((λ (z : C) (P : poset_sym_mon_closed_cat)
      (fs : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧),
      ((λ (x : pr1 P) (j : J), pr1 (fs j) x),,
       poset_enrichment_coprod_is_coprod_subproof z P fs)
      · poset_enrichment_coprod_pair EC z ys) z P f
     · precomp_arr E' z
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone g))
      w = f g w)


Going to execute:
cbn

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  f : ∏ j : J, poset_sym_mon_closed_cat ⟦ P, E' ⦃ ys j, z ⦄ ⟧
  g : J
  w : pr1hSet
        ?X560@{__:=?M0; __:=?M0; __:=?M0; __:=?M0; __:=
               ?M0; __:=?M0; __:=?M0; __:=?M0; __:=
               ?M0; __:=?M0}
  ============================
   (poset_enrichment_obj_coprod_in EC ys g
    · poset_enrichment_obj_coprod_sum EC (λ j : J, pr1 (f j) w) = 
    f g w)


Going to execute:
apply poset_enrichment_obj_coprod_in_sum

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (φ₁
     φ₂ : poset_sym_mon_closed_cat ⟦ v,
          E' ⦃ make_poset_enriched_coprod_cocone, w ⦄ ⟧),
    (∏ j : J,
     φ₁
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
     φ₂
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j))
    → φ₁ = φ₂)


Going to execute:
intros z P φ₁ φ₂ q; use eq_monotone_function; intro w; use
 poset_enrichment_coprod_arr_eq; intro j; exact
 (eqtohomot (maponpaths (λ f, pr1 f) (q j)) w)
Evaluated term: poset_enrichment_obj_coprod_in_sum

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (φ₁
     φ₂ : poset_sym_mon_closed_cat ⟦ v,
          E' ⦃ make_poset_enriched_coprod_cocone, w ⦄ ⟧),
    (∏ j : J,
     φ₁
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
     φ₂
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j))
    → φ₁ = φ₂)


Going to execute:
intros z P φ₁ φ₂ q; use eq_monotone_function; intro w; use
 poset_enrichment_coprod_arr_eq; intro j

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (φ₁
     φ₂ : poset_sym_mon_closed_cat ⟦ v,
          E' ⦃ make_poset_enriched_coprod_cocone, w ⦄ ⟧),
    (∏ j : J,
     φ₁
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
     φ₂
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j))
    → φ₁ = φ₂)


Going to execute:
intros z P φ₁ φ₂ q; use eq_monotone_function; intro w; use
 poset_enrichment_coprod_arr_eq

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (φ₁
     φ₂ : poset_sym_mon_closed_cat ⟦ v,
          E' ⦃ make_poset_enriched_coprod_cocone, w ⦄ ⟧),
    (∏ j : J,
     φ₁
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
     φ₂
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j))
    → φ₁ = φ₂)


Going to execute:
intros z P φ₁ φ₂ q; use eq_monotone_function; intro w

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (φ₁
     φ₂ : poset_sym_mon_closed_cat ⟦ v,
          E' ⦃ make_poset_enriched_coprod_cocone, w ⦄ ⟧),
    (∏ j : J,
     φ₁
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
     φ₂
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j))
    → φ₁ = φ₂)


Going to execute:
intros z P φ₁ φ₂ q; use eq_monotone_function

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  ============================
   (∏ (w : C) (v : poset_sym_mon_closed_cat)
    (φ₁
     φ₂ : poset_sym_mon_closed_cat ⟦ v,
          E' ⦃ make_poset_enriched_coprod_cocone, w ⦄ ⟧),
    (∏ j : J,
     φ₁
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
     φ₂
     · precomp_arr E' w
         (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j))
    → φ₁ = φ₂)


Going to execute:
intros z P φ₁ φ₂ q

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
use eq_monotone_function

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple_rapply p

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
fun p =>
  simple refine p ||
    simple refine (p _) ||
      simple refine (p _ _) ||
...                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _)
                               || simple refine
                               (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)

TcDebug (1) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine p ||
  simple refine (p _) ||
    simple refine (p _ _) ||
      simple refine (p _ _ _) ||
        simple refine (p _ _ _ _) ||
          simple refine (p _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)

TcDebug (1) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine p
Level 1: evaluation returns
simple refine p ||
  simple refine (p _) ||
    simple refine (p _ _) ||
      simple refine (p _ _ _) ||
        simple refine (p _ _ _ _) ||
          simple refine (p _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
where
p := eq_monotone_function
of type
uconstr of type tacvalue


TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine (p _) ||
  simple refine (p _ _) ||
    simple refine (p _ _ _) ||
      simple refine (p _ _ _ _) ||
        simple refine (p _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
φ₁,
φ₂ : poset_sym_mon_closed_cat ⟦ P,
     E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
q : ∏ j : J,
    φ₁
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
    φ₂
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j)
The term "eq_monotone_function" has type
 "∏ f g : monotone_function ?R₁ ?R₂, (∏ x : ?X₁, f x = g x) → f = g"
while it is expected to have type "φ₁ = φ₂".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
φ₁,
φ₂ : poset_sym_mon_closed_cat ⟦ P,
     E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
q : ∏ j : J,
    φ₁
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
    φ₂
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j)
The term "eq_monotone_function" has type
 "∏ f g : monotone_function ?R₁ ?R₂, (∏ x : ?X₁, f x = g x) → f = g"
while it is expected to have type "φ₁ = φ₂".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine (p _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine (p _ _) ||
  simple refine (p _ _ _) ||
    simple refine (p _ _ _ _) ||
      simple refine (p _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
φ₁,
φ₂ : poset_sym_mon_closed_cat ⟦ P,
     E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
q : ∏ j : J,
    φ₁
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
    φ₂
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j)
The term "eq_monotone_function ?f" has type
 "∏ g : monotone_function ?R₁ ?R₂, (∏ x : ?X₁, ?f x = g x) → ?f = g"
while it is expected to have type "φ₁ = φ₂".
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
φ₁,
φ₂ : poset_sym_mon_closed_cat ⟦ P,
     E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
q : ∏ j : J,
    φ₁
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
    φ₂
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j)
The term "eq_monotone_function ?f" has type
 "∏ g : monotone_function ?R₁ ?R₂, (∏ x : ?X₁, ?f x = g x) → ?f = g"
while it is expected to have type "φ₁ = φ₂".

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine (p _ _)

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  C : category
  E : poset_enrichment C
  E' := make_enrichment_over_poset C E
     : enrichment C poset_sym_mon_closed_cat
  J : UU
  EC : poset_enrichment_coprod
  ys : J → C
  z : ob C
  P : ob poset_sym_mon_closed_cat
  φ₁ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  φ₂ : poset_sym_mon_closed_cat ⟦ P,
       E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
  q : ∏ j : J,
      φ₁
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j) =
      φ₂
      · precomp_arr E' z
          (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone
             j)
  ============================
   (φ₁ = φ₂)


Going to execute:
simple refine (p _ _ _) ||
  simple refine (p _ _ _ _) ||
    simple refine (p _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple
                       refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
C : category
E : poset_enrichment C
E' := make_enrichment_over_poset C E : enrichment C poset_sym_mon_closed_cat
J : UU
EC : poset_enrichment_coprod
ys : J → C
z : C
P : poset_sym_mon_closed_cat
φ₁,
φ₂ : poset_sym_mon_closed_cat ⟦ P,
     E' ⦃ make_poset_enriched_coprod_cocone, z ⦄ ⟧
q : ∏ j : J,
    φ₁
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j) =
    φ₂
    · precomp_arr E' z
        (enriched_coprod_cocone_in E' ys make_poset_enriched_coprod_cocone j)
The term "eq_monotone_function ?f ?g" has type
