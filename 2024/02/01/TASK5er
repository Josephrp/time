      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple refine
           (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
EEC : enrichment_coequalizers E'
w, x, y : C
f, g : C ⟦ x, y ⟧
Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
        (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
 : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
Eq_path := EqualizerEqAr Eq
 : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
fg : pr1 Eq
The term "@underlying_Coequalizer_arr_eq ?V ?C ?E ?x ?y ?f ?g ?a ?Ha ?w"
has type
 "∏ h₁ h₂ : ?C ⟦ ?a, ?w ⟧,
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · h₁ =
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · h₂ → 
  h₁ = h₂" while it is expected to have type
 "CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
    (pr1 fg) (pr2 fg) =
  pr1
    (EqualizerIn
       (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w) Eq
       Eq_pr Eq_path) fg".
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
EEC : enrichment_coequalizers E'
w, x, y : C
f, g : C ⟦ x, y ⟧
Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
        (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
 : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
Eq_path := EqualizerEqAr Eq
 : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
fg : pr1 Eq
The term "@underlying_Coequalizer_arr_eq ?V ?C ?E ?x ?y ?f ?g ?a ?Ha ?w"
has type
 "∏ h₁ h₂ : ?C ⟦ ?a, ?w ⟧,
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · h₁ =
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · h₂ → 
  h₁ = h₂" while it is expected to have type
 "CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
    (pr1 fg) (pr2 fg) =
  pr1
    (EqualizerIn
       (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w) Eq
       Eq_pr Eq_path) fg".

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple refine
         (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
EEC : enrichment_coequalizers E'
w, x, y : C
f, g : C ⟦ x, y ⟧
Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
        (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
 : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
Eq_path := EqualizerEqAr Eq
 : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
fg : pr1 Eq
The term "@underlying_Coequalizer_arr_eq ?V ?C ?E ?x ?y ?f ?g ?a ?Ha ?w ?h₁"
has type
 "∏ h₂ : ?C ⟦ ?a, ?w ⟧,
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · ?h₁ =
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · h₂ → 
  ?h₁ = h₂" while it is expected to have type
 "CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
    (pr1 fg) (pr2 fg) =
  pr1
    (EqualizerIn
       (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w) Eq
       Eq_pr Eq_path) fg".
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
EEC : enrichment_coequalizers E'
w, x, y : C
f, g : C ⟦ x, y ⟧
Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
        (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
 : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
Eq_path := EqualizerEqAr Eq
 : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
fg : pr1 Eq
The term "@underlying_Coequalizer_arr_eq ?V ?C ?E ?x ?y ?f ?g ?a ?Ha ?w ?h₁"
has type
 "∏ h₂ : ?C ⟦ ?a, ?w ⟧,
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · ?h₁ =
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · h₂ → 
  ?h₁ = h₂" while it is expected to have type
 "CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
    (pr1 fg) (pr2 fg) =
  pr1
    (EqualizerIn
       (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w) Eq
       Eq_pr Eq_path) fg".

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
  simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) || simple refine
       (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
EEC : enrichment_coequalizers E'
w, x, y : C
f, g : C ⟦ x, y ⟧
Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
        (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
 : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
Eq_path := EqualizerEqAr Eq
 : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
fg : pr1 Eq
The term "underlying_Coequalizer_arr_eq ?E ?f ?g ?Ha" has type
 "enriched_coequalizer_cocone_in ?E ?f ?g ?a · ?h₁ =
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · ?h₂ → 
  ?h₁ = ?h₂" while it is expected to have type
 "CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
    (pr1 fg) (pr2 fg) =
  pr1
    (EqualizerIn
       (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w) Eq
       Eq_pr Eq_path) fg".
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
EEC : enrichment_coequalizers E'
w, x, y : C
f, g : C ⟦ x, y ⟧
Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
        (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
 : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
Eq_path := EqualizerEqAr Eq
 : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
fg : pr1 Eq
The term "underlying_Coequalizer_arr_eq ?E ?f ?g ?Ha" has type
 "enriched_coequalizer_cocone_in ?E ?f ?g ?a · ?h₁ =
  enriched_coequalizer_cocone_in ?E ?f ?g ?a · ?h₂ → 
  ?h₁ = ?h₂" while it is expected to have type
 "CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
    (pr1 fg) (pr2 fg) =
  pr1
    (EqualizerIn
       (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w) Eq
       Eq_pr Eq_path) fg".

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
simple refine (p _ _ _ _ _ _ _ _ _ _ _)

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
      (pr1 fg) (pr2 fg) =
    pr1
      (EqualizerIn
         (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
         Eq Eq_pr Eq_path) fg)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (is_coequalizer_enriched E' f g (pr1 (EEC x y f g)))


Going to execute:
<coq-core.plugins.ltac::exact@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  Eq := Equalizers_category_of_hset_struct HP (E' ⦃ y, w ⦄) 
          (E' ⦃ x, w ⦄) (precomp_arr E' w f) (precomp_arr E' w g)
     : Equalizer (precomp_arr E' w f) (precomp_arr E' w g)
  Eq_pr := EqualizerArrow Eq : category_of_hset_struct P ⟦ Eq, E' ⦃ y, w ⦄ ⟧
  Eq_path := EqualizerEqAr Eq
          : Eq_pr · precomp_arr E' w f = Eq_pr · precomp_arr E' w g
  fg : pr1hSet (pr1 Eq)
  ============================
   (enriched_coequalizer_cocone_in E' f g (pr1 (EEC x y f g))
    · CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
        (pr1 fg) (pr2 fg) =
    enriched_coequalizer_cocone_in E' f g (pr1 (EEC x y f g))
    · pr1
        (EqualizerIn
           (is_coequalizer_enriched_to_Equalizer E' f g (pr2 (EEC x y f g)) w)
           Eq Eq_pr Eq_path) fg)


Going to execute:
<coq-core.plugins.ltac::refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  ============================
   structure_enrichment_coequalizers


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1
Evaluated term: (CoequalizerCommutes
                   (underlying_Coequalizer E' f g (pr2 (EEC x y f g))))

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  ============================
   (Coequalizers C)


Going to execute:
<coq-core.plugins.ltac::exact@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  ============================
   ((λ EC : Coequalizers C,
     ∏ (w x y : C) (f g : C ⟦ x, y ⟧),
     mor_hset_struct P
       (hset_struct_equalizer HP (pr2 (precomp_arr E' w f))
          (pr2 (precomp_arr E' w g))) (E (EC x y f g) w)
       (λ h : (∑ x0 : pr1 (E' ⦃ y, w ⦄),
               hProp_to_hSet
                 (pr1 (precomp_arr E' w f) x0 = pr1 (precomp_arr E' w g) x0)%logic)%set,
        CoequalizerOut (EC x y f g) w (pr1 h) (pr2 h)))
      (λ (x y : C) (f g : C ⟦ x, y ⟧),
       underlying_Coequalizer E' f g (pr2 (EEC x y f g))))


Going to execute:
intros w x y f g;
 apply to_structure_enrichment_coequalizer_structure_preserving

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  ============================
   ((λ EC : Coequalizers C,
     ∏ (w x y : C) (f g : C ⟦ x, y ⟧),
     mor_hset_struct P
       (hset_struct_equalizer HP (pr2 (precomp_arr E' w f))
          (pr2 (precomp_arr E' w g))) (E (EC x y f g) w)
       (λ h : (∑ x0 : pr1 (E' ⦃ y, w ⦄),
               hProp_to_hSet
                 (pr1 (precomp_arr E' w f) x0 = pr1 (precomp_arr E' w g) x0)%logic)%set,
        CoequalizerOut (EC x y f g) w (pr1 h) (pr2 h)))
      (λ (x y : C) (f g : C ⟦ x, y ⟧),
       underlying_Coequalizer E' f g (pr2 (EEC x y f g))))


Going to execute:
intros w x y f g

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  EEC : enrichment_coequalizers E'
  w : ob C
  x : ob C
  y : ob C
  f : C ⟦ x, y ⟧
  g : C ⟦ x, y ⟧
  ============================
   (mor_hset_struct P
      (hset_struct_equalizer HP (pr2 (precomp_arr E' w f))
         (pr2 (precomp_arr E' w g)))
      (E (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w)
      (λ h : (∑ x0 : pr1 (E' ⦃ y, w ⦄),
              hProp_to_hSet
                (pr1 (precomp_arr E' w f) x0 = pr1 (precomp_arr E' w g) x0)%logic)%set,
       CoequalizerOut (underlying_Coequalizer E' f g (pr2 (EEC x y f g))) w
         (pr1 h) (pr2 h)))


Going to execute:
apply to_structure_enrichment_coequalizer_structure_preserving

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple_rapply p
Evaluated term: to_structure_enrichment_coequalizer_structure_preserving

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
fun p =>
  simple refine p ||
    simple refine (p _) ||
      simple refine (p _ _) ||
...                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _)
                               || simple refine
                               (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)

TcDebug (1) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple refine p ||
  simple refine (p _) ||
    simple refine (p _ _) ||
      simple refine (p _ _ _) ||
        simple refine (p _ _ _ _) ||
          simple refine (p _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)

TcDebug (1) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple refine p
Level 1: evaluation returns
simple refine p ||
  simple refine (p _) ||
    simple refine (p _ _) ||
      simple refine (p _ _ _) ||
        simple refine (p _ _ _ _) ||
          simple refine (p _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                              simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
where
p := weqimplimpl
of type
uconstr of type tacvalue


TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple refine (p _) ||
  simple refine (p _ _) ||
    simple refine (p _ _ _) ||
      simple refine (p _ _ _ _) ||
        simple refine (p _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                            simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
HC : is_univalent C
The term "weqimplimpl" has type
 "(?X → ?Y) → (?Y → ?X) → isaprop ?X → isaprop ?Y → ?X ≃ ?Y"
while it is expected to have type
 "enrichment_coequalizers E' ≃ structure_enrichment_coequalizers".
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
HC : is_univalent C
The term "weqimplimpl" has type
 "(?X → ?Y) → (?Y → ?X) → isaprop ?X → isaprop ?Y → ?X ≃ ?Y"
while it is expected to have type
 "enrichment_coequalizers E' ≃ structure_enrichment_coequalizers".

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple refine (p _)

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple refine (p _ _) ||
  simple refine (p _ _ _) ||
    simple refine (p _ _ _ _) ||
      simple refine (p _ _ _ _ _) ||
        simple refine (p _ _ _ _ _ _) ||
          simple refine (p _ _ _ _ _ _ _) ||
            simple refine (p _ _ _ _ _ _ _ _) ||
              simple refine (p _ _ _ _ _ _ _ _ _) ||
                simple refine (p _ _ _ _ _ _ _ _ _ _) ||
                  simple refine (p _ _ _ _ _ _ _ _ _ _ _) ||
                    simple refine (p _ _ _ _ _ _ _ _ _ _ _ _) ||
                      simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                        simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _) ||
                          simple refine (p _ _ _ _ _ _ _ _ _ _ _ _ _ _ _)
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
HC : is_univalent C
The term "weqimplimpl ?f" has type
 "(?Y → ?X) → isaprop ?X → isaprop ?Y → ?X ≃ ?Y"
while it is expected to have type
 "enrichment_coequalizers E' ≃ structure_enrichment_coequalizers".
Level 0: In environment
P : hset_cartesian_closed_struct
C : category
E : struct_enrichment P C
E' := make_enrichment_over_struct P C E
 : enrichment C (sym_mon_closed_cat_of_hset_struct P)
HP : hset_equalizer_struct P
HC : is_univalent C
The term "weqimplimpl ?f" has type
 "(?Y → ?X) → isaprop ?X → isaprop ?Y → ?X ≃ ?Y"
while it is expected to have type
 "enrichment_coequalizers E' ≃ structure_enrichment_coequalizers".

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
simple refine (p _ _)

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
     : enrichment C (sym_mon_closed_cat_of_hset_struct P)
  HP : hset_equalizer_struct P
  HC : is_univalent C
  ============================
   (enrichment_coequalizers E' ≃ structure_enrichment_coequalizers)


Going to execute:
<coq-core.plugins.ltac::simple_refine@0> $1

TcDebug (0) > 
Goal:
  
  P : hset_cartesian_closed_struct
  C : category
  E : struct_enrichment P C
  E' := make_enrichment_over_struct P C E
